services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-loghub}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 3s
      retries: 20

  web:
    build: .
    environment:
      DJANGO_DEBUG: "1"
      DJANGO_ALLOWED_HOSTS: "*"
      POSTGRES_DB: ${POSTGRES_DB:-loghub}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    command: >-
      bash -lc "
      npm install --no-audit --no-fund && 
      ./node_modules/.bin/tailwindcss -i ./assets/styles.css -o ./static/css/tailwind.css && 
      ./node_modules/.bin/tailwindcss -i ./assets/styles.css -o ./static/css/tailwind.css --watch & 
      python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

  test:
    build: .
    environment:
      DJANGO_DEBUG: "0"
      DJANGO_ALLOWED_HOSTS: "*"
      POSTGRES_DB: ${POSTGRES_DB:-loghub}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    command: bash -lc "python manage.py check && pytest -q"

  

volumes:
  pgdata: {}
